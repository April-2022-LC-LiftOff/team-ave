{"ast":null,"code":"import { Occurrence } from 'src/app/occurrence';\nimport { FormControl } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/occurrence.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./../../_services/token-storage.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/chips\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/material/autocomplete\";\nimport * as i10 from \"@angular/material/core\";\nconst _c0 = [\"stressorInput\"];\n\nfunction OccurrenceLogComponent_mat_chip_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-chip\", 20);\n    i0.ɵɵlistener(\"removed\", function OccurrenceLogComponent_mat_chip_13_Template_mat_chip_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const stressor_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.remove(stressor_r6);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 21)(3, \"mat-icon\");\n    i0.ɵɵtext(4, \"cancel\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const stressor_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", stressor_r6, \" \");\n  }\n}\n\nfunction OccurrenceLogComponent_mat_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const stressor_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", stressor_r9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", stressor_r9, \" \");\n  }\n}\n\nexport class OccurrenceLogComponent {\n  constructor(_service, _route, token, route) {\n    this._service = _service;\n    this._route = _route;\n    this.token = token;\n    this.route = route;\n    this.separatorKeysCodes = [ENTER, COMMA];\n    this.stressorCtrl = new FormControl('');\n    this.stressors = [];\n    this.form = {\n      location: null,\n      description: null\n    };\n    this.isSuccessful = false;\n    this.isLoggedIn = false;\n    this.errorMessage = '';\n    this.roles = [];\n    this.filteredStressors = this.stressorCtrl.valueChanges.pipe(startWith(null), map(stressor => stressor ? this._filter(stressor) : this.allStressors.slice()));\n    this.allStressors = token.getUser().stressors;\n  }\n\n  ngOnInit() {\n    if (this.token.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.token.getUser().roles;\n    }\n\n    if (!this.isLoggedIn) {\n      this._route.navigateByUrl('/login');\n    }\n\n    this.route.params.subscribe(params => {\n      this.occurrence = new Occurrence();\n\n      if (params['id']) {\n        this.occurrence = this._service.getOccurrenceById(params['id']);\n        this.occurrenceId = params['id'];\n        this.isNew = false;\n      } else {\n        this.isNew = true;\n      }\n    });\n  }\n\n  createOccurrence() {\n    const userId = this.token.getUser().id;\n    const {\n      location,\n      description\n    } = this.form;\n    const stressors = this.stressors;\n    const destressors = \"test\";\n\n    if (this.isNew) {\n      this._service.createOccurrence(location, stressors, destressors, description, userId).subscribe(data => {\n        this.isSuccessful = true;\n        console.log(\"eureka!\");\n      }, err => {\n        this.isSuccessful = false;\n        this.errorMessage = err.error.message;\n      });\n    } else {\n      this._service.updateOccurrence(this.occurrenceId, location, stressors, destressors, userId).subscribe(data => {\n        this.isSuccessful = true;\n        console.log(\"updated\");\n      });\n    }\n\n    this._route.navigateByUrl('/profile');\n  }\n\n  add(event) {\n    const value = (event.value || '').trim(); // Add our stressor\n\n    if (value) {\n      this.stressors.push(value);\n    } // Clear the input value\n\n\n    event.chipInput.clear();\n    this.stressorCtrl.setValue(null);\n  }\n\n  remove(stressor) {\n    const index = this.stressors.indexOf(stressor);\n\n    if (index >= 0) {\n      this.stressors.splice(index, 1);\n    }\n  }\n\n  selected(event) {\n    this.stressors.push(event.option.viewValue);\n    this.stressorInput.nativeElement.value = '';\n    this.stressorCtrl.setValue(null);\n  }\n\n  _filter(value) {\n    const filterValue = value.toLowerCase();\n    return this.allStressors.filter(stressor => stressor.toLowerCase().includes(filterValue));\n  }\n\n}\n\nOccurrenceLogComponent.ɵfac = function OccurrenceLogComponent_Factory(t) {\n  return new (t || OccurrenceLogComponent)(i0.ɵɵdirectiveInject(i1.OccurrenceService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.TokenStorageService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n\nOccurrenceLogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: OccurrenceLogComponent,\n  selectors: [[\"app-occurrence-log\"]],\n  viewQuery: function OccurrenceLogComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stressorInput = _t.first);\n    }\n  },\n  decls: 30,\n  vars: 11,\n  consts: [[1, \"oc-container\"], [3, \"ngSubmit\"], [\"occcurrenceLog\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"location\"], [\"type\", \"text\", \"placeholder\", \"location\", \"name\", \"location\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"appearance\", \"fill\", 1, \"example-chip-list\"], [\"aria-label\", \"Stressor selection\"], [\"chipList\", \"\"], [3, \"removed\", 4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"Stressors...\", 3, \"formControl\", \"matAutocomplete\", \"matChipInputFor\", \"matChipInputSeparatorKeyCodes\", \"matChipInputTokenEnd\"], [\"stressorInput\", \"\"], [3, \"optionSelected\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"deescalation\"], [\"type\", \"text\", \"placeholder\", \"destressors\", \"name\", \"deescalation\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"description\"], [\"type\", \"textarea\", \"placeholder\", \"description\", \"name\", \"description\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\"], [3, \"removed\"], [\"matChipRemove\", \"\"], [3, \"value\"]],\n  template: function OccurrenceLogComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function OccurrenceLogComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.createOccurrence();\n      });\n      i0.ɵɵtext(3, \" --> \");\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n      i0.ɵɵtext(6, \"Where did this take place?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function OccurrenceLogComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.form.location = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"mat-form-field\", 6)(9, \"mat-label\");\n      i0.ɵɵtext(10, \"What stressors were involved?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"mat-chip-list\", 7, 8);\n      i0.ɵɵtemplate(13, OccurrenceLogComponent_mat_chip_13_Template, 5, 1, \"mat-chip\", 9);\n      i0.ɵɵelementStart(14, \"input\", 10, 11);\n      i0.ɵɵlistener(\"matChipInputTokenEnd\", function OccurrenceLogComponent_Template_input_matChipInputTokenEnd_14_listener($event) {\n        return ctx.add($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"mat-autocomplete\", 12, 13);\n      i0.ɵɵlistener(\"optionSelected\", function OccurrenceLogComponent_Template_mat_autocomplete_optionSelected_16_listener($event) {\n        return ctx.selected($event);\n      });\n      i0.ɵɵtemplate(18, OccurrenceLogComponent_mat_option_18_Template, 2, 2, \"mat-option\", 14);\n      i0.ɵɵpipe(19, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 3)(21, \"label\", 15);\n      i0.ɵɵtext(22, \"How were you able to deescalate?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"input\", 16);\n      i0.ɵɵlistener(\"ngModelChange\", function OccurrenceLogComponent_Template_input_ngModelChange_23_listener($event) {\n        return ctx.form.destressors = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"div\", 3)(25, \"label\", 17);\n      i0.ɵɵtext(26, \"how would you describe the event?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"input\", 18);\n      i0.ɵɵlistener(\"ngModelChange\", function OccurrenceLogComponent_Template_input_ngModelChange_27_listener($event) {\n        return ctx.form.description = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"button\", 19);\n      i0.ɵɵtext(29, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(12);\n\n      const _r4 = i0.ɵɵreference(17);\n\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.form.location);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.stressors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.stressorCtrl)(\"matAutocomplete\", _r4)(\"matChipInputFor\", _r1)(\"matChipInputSeparatorKeyCodes\", ctx.separatorKeysCodes);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(19, 9, ctx.filteredStressors));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.form.destressors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.form.description);\n    }\n  },\n  directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i5.MatFormField, i5.MatLabel, i6.MatChipList, i7.NgForOf, i6.MatChip, i6.MatChipRemove, i8.MatIcon, i9.MatAutocompleteTrigger, i6.MatChipInput, i4.FormControlDirective, i9.MatAutocomplete, i10.MatOption],\n  pipes: [i7.AsyncPipe],\n  styles: [\".oc-container[_ngcontent-%COMP%] {\\r\\n    max-width: 500px;\\r\\n    margin: auto;\\r\\n    margin-top: 50px;\\r\\n    \\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9jY3VycmVuY2UtbG9nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLGdCQUFnQjs7QUFFcEIiLCJmaWxlIjoib2NjdXJyZW5jZS1sb2cuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5vYy1jb250YWluZXIge1xyXG4gICAgbWF4LXdpZHRoOiA1MDBweDtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIG1hcmdpbi10b3A6IDUwcHg7XHJcbiAgICBcclxufSJdfQ== */\"]\n});","map":{"version":3,"sources":["C:/Users/dchiefari/Desktop/liftoff/frontend/src/app/occurrence/occurrence-log/occurrence-log.component.ts"],"names":["Occurrence","FormControl","map","startWith","COMMA","ENTER","i0","i1","i2","i3","i4","i5","i6","i7","i8","i9","i10","_c0","OccurrenceLogComponent_mat_chip_13_Template","rf","ctx","_r8","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","OccurrenceLogComponent_mat_chip_13_Template_mat_chip_removed_0_listener","restoredCtx","ɵɵrestoreView","stressor_r6","$implicit","ctx_r7","ɵɵnextContext","remove","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","OccurrenceLogComponent_mat_option_18_Template","stressor_r9","ɵɵproperty","OccurrenceLogComponent","constructor","_service","_route","token","route","separatorKeysCodes","stressorCtrl","stressors","form","location","description","isSuccessful","isLoggedIn","errorMessage","roles","filteredStressors","valueChanges","pipe","stressor","_filter","allStressors","slice","getUser","ngOnInit","getToken","navigateByUrl","params","subscribe","occurrence","getOccurrenceById","occurrenceId","isNew","createOccurrence","userId","id","destressors","data","console","log","err","error","message","updateOccurrence","add","event","value","trim","push","chipInput","clear","setValue","index","indexOf","splice","selected","option","viewValue","stressorInput","nativeElement","filterValue","toLowerCase","filter","includes","ɵfac","OccurrenceLogComponent_Factory","t","ɵɵdirectiveInject","OccurrenceService","Router","TokenStorageService","ActivatedRoute","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","OccurrenceLogComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","decls","vars","consts","template","OccurrenceLogComponent_Template","OccurrenceLogComponent_Template_form_ngSubmit_1_listener","OccurrenceLogComponent_Template_input_ngModelChange_7_listener","$event","ɵɵtemplate","OccurrenceLogComponent_Template_input_matChipInputTokenEnd_14_listener","OccurrenceLogComponent_Template_mat_autocomplete_optionSelected_16_listener","ɵɵpipe","OccurrenceLogComponent_Template_input_ngModelChange_23_listener","OccurrenceLogComponent_Template_input_ngModelChange_27_listener","_r1","ɵɵreference","_r4","ɵɵpipeBind1","directives","ɵNgNoValidate","NgControlStatusGroup","NgForm","DefaultValueAccessor","NgControlStatus","NgModel","MatFormField","MatLabel","MatChipList","NgForOf","MatChip","MatChipRemove","MatIcon","MatAutocompleteTrigger","MatChipInput","FormControlDirective","MatAutocomplete","MatOption","pipes","AsyncPipe","styles"],"mappings":"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","sourcesContent":["import { Occurrence } from 'src/app/occurrence';\r\nimport { FormControl } from '@angular/forms';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"src/app/service/occurrence.service\";\r\nimport * as i2 from \"@angular/router\";\r\nimport * as i3 from \"./../../_services/token-storage.service\";\r\nimport * as i4 from \"@angular/forms\";\r\nimport * as i5 from \"@angular/material/form-field\";\r\nimport * as i6 from \"@angular/material/chips\";\r\nimport * as i7 from \"@angular/common\";\r\nimport * as i8 from \"@angular/material/icon\";\r\nimport * as i9 from \"@angular/material/autocomplete\";\r\nimport * as i10 from \"@angular/material/core\";\r\nconst _c0 = [\"stressorInput\"];\r\nfunction OccurrenceLogComponent_mat_chip_13_Template(rf, ctx) { if (rf & 1) {\r\n    const _r8 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"mat-chip\", 20);\r\n    i0.ɵɵlistener(\"removed\", function OccurrenceLogComponent_mat_chip_13_Template_mat_chip_removed_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r8); const stressor_r6 = restoredCtx.$implicit; const ctx_r7 = i0.ɵɵnextContext(); return ctx_r7.remove(stressor_r6); });\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementStart(2, \"button\", 21)(3, \"mat-icon\");\r\n    i0.ɵɵtext(4, \"cancel\");\r\n    i0.ɵɵelementEnd()()();\r\n} if (rf & 2) {\r\n    const stressor_r6 = ctx.$implicit;\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate1(\" \", stressor_r6, \" \");\r\n} }\r\nfunction OccurrenceLogComponent_mat_option_18_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"mat-option\", 22);\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const stressor_r9 = ctx.$implicit;\r\n    i0.ɵɵproperty(\"value\", stressor_r9);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate1(\" \", stressor_r9, \" \");\r\n} }\r\nexport class OccurrenceLogComponent {\r\n    constructor(_service, _route, token, route) {\r\n        this._service = _service;\r\n        this._route = _route;\r\n        this.token = token;\r\n        this.route = route;\r\n        this.separatorKeysCodes = [ENTER, COMMA];\r\n        this.stressorCtrl = new FormControl('');\r\n        this.stressors = [];\r\n        this.form = {\r\n            location: null,\r\n            description: null\r\n        };\r\n        this.isSuccessful = false;\r\n        this.isLoggedIn = false;\r\n        this.errorMessage = '';\r\n        this.roles = [];\r\n        this.filteredStressors = this.stressorCtrl.valueChanges.pipe(startWith(null), map((stressor) => (stressor ? this._filter(stressor) : this.allStressors.slice())));\r\n        this.allStressors = token.getUser().stressors;\r\n    }\r\n    ngOnInit() {\r\n        if (this.token.getToken()) {\r\n            this.isLoggedIn = true;\r\n            this.roles = this.token.getUser().roles;\r\n        }\r\n        if (!this.isLoggedIn) {\r\n            this._route.navigateByUrl('/login');\r\n        }\r\n        this.route.params.subscribe((params) => {\r\n            this.occurrence = new Occurrence();\r\n            if (params['id']) {\r\n                this.occurrence = this._service.getOccurrenceById(params['id']);\r\n                this.occurrenceId = params['id'];\r\n                this.isNew = false;\r\n            }\r\n            else {\r\n                this.isNew = true;\r\n            }\r\n        });\r\n    }\r\n    createOccurrence() {\r\n        const userId = this.token.getUser().id;\r\n        const { location, description } = this.form;\r\n        const stressors = this.stressors;\r\n        const destressors = \"test\";\r\n        if (this.isNew) {\r\n            this._service.createOccurrence(location, stressors, destressors, description, userId).subscribe(data => {\r\n                this.isSuccessful = true;\r\n                console.log(\"eureka!\");\r\n            }, err => {\r\n                this.isSuccessful = false;\r\n                this.errorMessage = err.error.message;\r\n            });\r\n        }\r\n        else {\r\n            this._service.updateOccurrence(this.occurrenceId, location, stressors, destressors, userId).subscribe(data => {\r\n                this.isSuccessful = true;\r\n                console.log(\"updated\");\r\n            });\r\n        }\r\n        this._route.navigateByUrl('/profile');\r\n    }\r\n    add(event) {\r\n        const value = (event.value || '').trim();\r\n        // Add our stressor\r\n        if (value) {\r\n            this.stressors.push(value);\r\n        }\r\n        // Clear the input value\r\n        event.chipInput.clear();\r\n        this.stressorCtrl.setValue(null);\r\n    }\r\n    remove(stressor) {\r\n        const index = this.stressors.indexOf(stressor);\r\n        if (index >= 0) {\r\n            this.stressors.splice(index, 1);\r\n        }\r\n    }\r\n    selected(event) {\r\n        this.stressors.push(event.option.viewValue);\r\n        this.stressorInput.nativeElement.value = '';\r\n        this.stressorCtrl.setValue(null);\r\n    }\r\n    _filter(value) {\r\n        const filterValue = value.toLowerCase();\r\n        return this.allStressors.filter(stressor => stressor.toLowerCase().includes(filterValue));\r\n    }\r\n}\r\nOccurrenceLogComponent.ɵfac = function OccurrenceLogComponent_Factory(t) { return new (t || OccurrenceLogComponent)(i0.ɵɵdirectiveInject(i1.OccurrenceService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.TokenStorageService), i0.ɵɵdirectiveInject(i2.ActivatedRoute)); };\r\nOccurrenceLogComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: OccurrenceLogComponent, selectors: [[\"app-occurrence-log\"]], viewQuery: function OccurrenceLogComponent_Query(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵviewQuery(_c0, 5);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stressorInput = _t.first);\r\n    } }, decls: 30, vars: 11, consts: [[1, \"oc-container\"], [3, \"ngSubmit\"], [\"occcurrenceLog\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"location\"], [\"type\", \"text\", \"placeholder\", \"location\", \"name\", \"location\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"appearance\", \"fill\", 1, \"example-chip-list\"], [\"aria-label\", \"Stressor selection\"], [\"chipList\", \"\"], [3, \"removed\", 4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"Stressors...\", 3, \"formControl\", \"matAutocomplete\", \"matChipInputFor\", \"matChipInputSeparatorKeyCodes\", \"matChipInputTokenEnd\"], [\"stressorInput\", \"\"], [3, \"optionSelected\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"deescalation\"], [\"type\", \"text\", \"placeholder\", \"destressors\", \"name\", \"deescalation\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"description\"], [\"type\", \"textarea\", \"placeholder\", \"description\", \"name\", \"description\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\"], [3, \"removed\"], [\"matChipRemove\", \"\"], [3, \"value\"]], template: function OccurrenceLogComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2);\r\n        i0.ɵɵlistener(\"ngSubmit\", function OccurrenceLogComponent_Template_form_ngSubmit_1_listener() { return ctx.createOccurrence(); });\r\n        i0.ɵɵtext(3, \" --> \");\r\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\r\n        i0.ɵɵtext(6, \"Where did this take place?\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(7, \"input\", 5);\r\n        i0.ɵɵlistener(\"ngModelChange\", function OccurrenceLogComponent_Template_input_ngModelChange_7_listener($event) { return ctx.form.location = $event; });\r\n        i0.ɵɵelementEnd()();\r\n        i0.ɵɵelementStart(8, \"mat-form-field\", 6)(9, \"mat-label\");\r\n        i0.ɵɵtext(10, \"What stressors were involved?\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(11, \"mat-chip-list\", 7, 8);\r\n        i0.ɵɵtemplate(13, OccurrenceLogComponent_mat_chip_13_Template, 5, 1, \"mat-chip\", 9);\r\n        i0.ɵɵelementStart(14, \"input\", 10, 11);\r\n        i0.ɵɵlistener(\"matChipInputTokenEnd\", function OccurrenceLogComponent_Template_input_matChipInputTokenEnd_14_listener($event) { return ctx.add($event); });\r\n        i0.ɵɵelementEnd()();\r\n        i0.ɵɵelementStart(16, \"mat-autocomplete\", 12, 13);\r\n        i0.ɵɵlistener(\"optionSelected\", function OccurrenceLogComponent_Template_mat_autocomplete_optionSelected_16_listener($event) { return ctx.selected($event); });\r\n        i0.ɵɵtemplate(18, OccurrenceLogComponent_mat_option_18_Template, 2, 2, \"mat-option\", 14);\r\n        i0.ɵɵpipe(19, \"async\");\r\n        i0.ɵɵelementEnd()();\r\n        i0.ɵɵelementStart(20, \"div\", 3)(21, \"label\", 15);\r\n        i0.ɵɵtext(22, \"How were you able to deescalate?\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(23, \"input\", 16);\r\n        i0.ɵɵlistener(\"ngModelChange\", function OccurrenceLogComponent_Template_input_ngModelChange_23_listener($event) { return ctx.form.destressors = $event; });\r\n        i0.ɵɵelementEnd()();\r\n        i0.ɵɵelementStart(24, \"div\", 3)(25, \"label\", 17);\r\n        i0.ɵɵtext(26, \"how would you describe the event?\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(27, \"input\", 18);\r\n        i0.ɵɵlistener(\"ngModelChange\", function OccurrenceLogComponent_Template_input_ngModelChange_27_listener($event) { return ctx.form.description = $event; });\r\n        i0.ɵɵelementEnd()();\r\n        i0.ɵɵelementStart(28, \"button\", 19);\r\n        i0.ɵɵtext(29, \"Submit\");\r\n        i0.ɵɵelementEnd()()();\r\n    } if (rf & 2) {\r\n        const _r1 = i0.ɵɵreference(12);\r\n        const _r4 = i0.ɵɵreference(17);\r\n        i0.ɵɵadvance(7);\r\n        i0.ɵɵproperty(\"ngModel\", ctx.form.location);\r\n        i0.ɵɵadvance(6);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx.stressors);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"formControl\", ctx.stressorCtrl)(\"matAutocomplete\", _r4)(\"matChipInputFor\", _r1)(\"matChipInputSeparatorKeyCodes\", ctx.separatorKeysCodes);\r\n        i0.ɵɵadvance(4);\r\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(19, 9, ctx.filteredStressors));\r\n        i0.ɵɵadvance(5);\r\n        i0.ɵɵproperty(\"ngModel\", ctx.form.destressors);\r\n        i0.ɵɵadvance(4);\r\n        i0.ɵɵproperty(\"ngModel\", ctx.form.description);\r\n    } }, directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i5.MatFormField, i5.MatLabel, i6.MatChipList, i7.NgForOf, i6.MatChip, i6.MatChipRemove, i8.MatIcon, i9.MatAutocompleteTrigger, i6.MatChipInput, i4.FormControlDirective, i9.MatAutocomplete, i10.MatOption], pipes: [i7.AsyncPipe], styles: [\".oc-container[_ngcontent-%COMP%] {\\r\\n    max-width: 500px;\\r\\n    margin: auto;\\r\\n    margin-top: 50px;\\r\\n    \\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9jY3VycmVuY2UtbG9nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLGdCQUFnQjs7QUFFcEIiLCJmaWxlIjoib2NjdXJyZW5jZS1sb2cuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5vYy1jb250YWluZXIge1xyXG4gICAgbWF4LXdpZHRoOiA1MDBweDtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIG1hcmdpbi10b3A6IDUwcHg7XHJcbiAgICBcclxufSJdfQ== */\"] });\r\n"]},"metadata":{},"sourceType":"module"}