{"ast":null,"code":"import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { FormControl } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/form-field\";\nimport * as i2 from \"@angular/material/chips\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/autocomplete\";\nimport * as i7 from \"@angular/material/core\";\nconst _c0 = [\"fruitInput\"];\n\nfunction UserSurveyComponent_mat_chip_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-chip\", 9);\n    i0.ɵɵlistener(\"removed\", function UserSurveyComponent_mat_chip_5_Template_mat_chip_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const fruit_r5 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.remove(fruit_r5);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 10)(3, \"mat-icon\");\n    i0.ɵɵtext(4, \"cancel\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const fruit_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", fruit_r5, \" \");\n  }\n}\n\nfunction UserSurveyComponent_mat_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const fruit_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", fruit_r8);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", fruit_r8, \" \");\n  }\n}\n\nexport class UserSurveyComponent {\n  constructor() {\n    this.separatorKeysCodes = [ENTER, COMMA];\n    this.fruitCtrl = new FormControl();\n    this.fruits = ['Lemon'];\n    this.allFruits = ['Apple', 'Lemon', 'Lime', 'Orange', 'Strawberry'];\n    this.filteredFruits = this.fruitCtrl.valueChanges.pipe(startWith(null), map(fruit => fruit ? this._filter(fruit) : this.allFruits.slice()));\n  }\n\n  add(event) {\n    const value = (event.value || '').trim(); // Add our fruit\n\n    if (value) {\n      this.fruits.push(value);\n    } // Clear the input value\n\n\n    event.chipInput.clear();\n    this.fruitCtrl.setValue(null);\n  }\n\n  remove(fruit) {\n    const index = this.fruits.indexOf(fruit);\n\n    if (index >= 0) {\n      this.fruits.splice(index, 1);\n    }\n  }\n\n  selected(event) {\n    this.fruits.push(event.option.viewValue);\n    this.fruitInput.nativeElement.value = '';\n    this.fruitCtrl.setValue(null);\n  }\n\n  _filter(value) {\n    const filterValue = value.toLowerCase();\n    return this.allFruits.filter(fruit => fruit.toLowerCase().includes(filterValue));\n  }\n\n}\n\nUserSurveyComponent.ɵfac = function UserSurveyComponent_Factory(t) {\n  return new (t || UserSurveyComponent)();\n};\n\nUserSurveyComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserSurveyComponent,\n  selectors: [[\"user-survey\"]],\n  viewQuery: function UserSurveyComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fruitInput = _t.first);\n    }\n  },\n  decls: 12,\n  vars: 8,\n  consts: [[\"appearance\", \"fill\", 1, \"example-chip-list\"], [\"aria-label\", \"Fruit selection\"], [\"chipList\", \"\"], [3, \"removed\", 4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"New fruit...\", 3, \"formControl\", \"matAutocomplete\", \"matChipInputFor\", \"matChipInputSeparatorKeyCodes\", \"matChipInputTokenEnd\"], [\"fruitInput\", \"\"], [3, \"optionSelected\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"removed\"], [\"matChipRemove\", \"\"], [3, \"value\"]],\n  template: function UserSurveyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-form-field\", 0)(1, \"mat-label\");\n      i0.ɵɵtext(2, \"Favorite Fruits\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"mat-chip-list\", 1, 2);\n      i0.ɵɵtemplate(5, UserSurveyComponent_mat_chip_5_Template, 5, 1, \"mat-chip\", 3);\n      i0.ɵɵelementStart(6, \"input\", 4, 5);\n      i0.ɵɵlistener(\"matChipInputTokenEnd\", function UserSurveyComponent_Template_input_matChipInputTokenEnd_6_listener($event) {\n        return ctx.add($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"mat-autocomplete\", 6, 7);\n      i0.ɵɵlistener(\"optionSelected\", function UserSurveyComponent_Template_mat_autocomplete_optionSelected_8_listener($event) {\n        return ctx.selected($event);\n      });\n      i0.ɵɵtemplate(10, UserSurveyComponent_mat_option_10_Template, 2, 2, \"mat-option\", 8);\n      i0.ɵɵpipe(11, \"async\");\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(4);\n\n      const _r3 = i0.ɵɵreference(9);\n\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.fruits);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.fruitCtrl)(\"matAutocomplete\", _r3)(\"matChipInputFor\", _r0)(\"matChipInputSeparatorKeyCodes\", ctx.separatorKeysCodes);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(11, 6, ctx.filteredFruits));\n    }\n  },\n  directives: [i1.MatFormField, i1.MatLabel, i2.MatChipList, i3.NgForOf, i2.MatChip, i2.MatChipRemove, i4.MatIcon, i5.DefaultValueAccessor, i6.MatAutocompleteTrigger, i2.MatChipInput, i5.NgControlStatus, i5.FormControlDirective, i6.MatAutocomplete, i7.MatOption],\n  pipes: [i3.AsyncPipe],\n  styles: [\".example-chip-list[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXItc3VydmV5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2IiLCJmaWxlIjoidXNlci1zdXJ2ZXkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNoaXAtbGlzdCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuIl19 */\"]\n});","map":{"version":3,"sources":["C:/Users/dchiefari/Desktop/liftoff/frontend/src/app/user-survey/user-survey.component.ts"],"names":["COMMA","ENTER","FormControl","map","startWith","i0","i1","i2","i3","i4","i5","i6","i7","_c0","UserSurveyComponent_mat_chip_5_Template","rf","ctx","_r7","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","UserSurveyComponent_mat_chip_5_Template_mat_chip_removed_0_listener","restoredCtx","ɵɵrestoreView","fruit_r5","$implicit","ctx_r6","ɵɵnextContext","remove","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","UserSurveyComponent_mat_option_10_Template","fruit_r8","ɵɵproperty","UserSurveyComponent","constructor","separatorKeysCodes","fruitCtrl","fruits","allFruits","filteredFruits","valueChanges","pipe","fruit","_filter","slice","add","event","value","trim","push","chipInput","clear","setValue","index","indexOf","splice","selected","option","viewValue","fruitInput","nativeElement","filterValue","toLowerCase","filter","includes","ɵfac","UserSurveyComponent_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","UserSurveyComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","decls","vars","consts","template","UserSurveyComponent_Template","ɵɵtemplate","UserSurveyComponent_Template_input_matChipInputTokenEnd_6_listener","$event","UserSurveyComponent_Template_mat_autocomplete_optionSelected_8_listener","ɵɵpipe","_r0","ɵɵreference","_r3","ɵɵpipeBind1","directives","MatFormField","MatLabel","MatChipList","NgForOf","MatChip","MatChipRemove","MatIcon","DefaultValueAccessor","MatAutocompleteTrigger","MatChipInput","NgControlStatus","FormControlDirective","MatAutocomplete","MatOption","pipes","AsyncPipe","styles"],"mappings":"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","sourcesContent":["import { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { FormControl } from '@angular/forms';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/material/form-field\";\r\nimport * as i2 from \"@angular/material/chips\";\r\nimport * as i3 from \"@angular/common\";\r\nimport * as i4 from \"@angular/material/icon\";\r\nimport * as i5 from \"@angular/forms\";\r\nimport * as i6 from \"@angular/material/autocomplete\";\r\nimport * as i7 from \"@angular/material/core\";\r\nconst _c0 = [\"fruitInput\"];\r\nfunction UserSurveyComponent_mat_chip_5_Template(rf, ctx) { if (rf & 1) {\r\n    const _r7 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"mat-chip\", 9);\r\n    i0.ɵɵlistener(\"removed\", function UserSurveyComponent_mat_chip_5_Template_mat_chip_removed_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r7); const fruit_r5 = restoredCtx.$implicit; const ctx_r6 = i0.ɵɵnextContext(); return ctx_r6.remove(fruit_r5); });\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementStart(2, \"button\", 10)(3, \"mat-icon\");\r\n    i0.ɵɵtext(4, \"cancel\");\r\n    i0.ɵɵelementEnd()()();\r\n} if (rf & 2) {\r\n    const fruit_r5 = ctx.$implicit;\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate1(\" \", fruit_r5, \" \");\r\n} }\r\nfunction UserSurveyComponent_mat_option_10_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"mat-option\", 11);\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const fruit_r8 = ctx.$implicit;\r\n    i0.ɵɵproperty(\"value\", fruit_r8);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate1(\" \", fruit_r8, \" \");\r\n} }\r\nexport class UserSurveyComponent {\r\n    constructor() {\r\n        this.separatorKeysCodes = [ENTER, COMMA];\r\n        this.fruitCtrl = new FormControl();\r\n        this.fruits = ['Lemon'];\r\n        this.allFruits = ['Apple', 'Lemon', 'Lime', 'Orange', 'Strawberry'];\r\n        this.filteredFruits = this.fruitCtrl.valueChanges.pipe(startWith(null), map((fruit) => (fruit ? this._filter(fruit) : this.allFruits.slice())));\r\n    }\r\n    add(event) {\r\n        const value = (event.value || '').trim();\r\n        // Add our fruit\r\n        if (value) {\r\n            this.fruits.push(value);\r\n        }\r\n        // Clear the input value\r\n        event.chipInput.clear();\r\n        this.fruitCtrl.setValue(null);\r\n    }\r\n    remove(fruit) {\r\n        const index = this.fruits.indexOf(fruit);\r\n        if (index >= 0) {\r\n            this.fruits.splice(index, 1);\r\n        }\r\n    }\r\n    selected(event) {\r\n        this.fruits.push(event.option.viewValue);\r\n        this.fruitInput.nativeElement.value = '';\r\n        this.fruitCtrl.setValue(null);\r\n    }\r\n    _filter(value) {\r\n        const filterValue = value.toLowerCase();\r\n        return this.allFruits.filter(fruit => fruit.toLowerCase().includes(filterValue));\r\n    }\r\n}\r\nUserSurveyComponent.ɵfac = function UserSurveyComponent_Factory(t) { return new (t || UserSurveyComponent)(); };\r\nUserSurveyComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: UserSurveyComponent, selectors: [[\"user-survey\"]], viewQuery: function UserSurveyComponent_Query(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵviewQuery(_c0, 5);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fruitInput = _t.first);\r\n    } }, decls: 12, vars: 8, consts: [[\"appearance\", \"fill\", 1, \"example-chip-list\"], [\"aria-label\", \"Fruit selection\"], [\"chipList\", \"\"], [3, \"removed\", 4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"New fruit...\", 3, \"formControl\", \"matAutocomplete\", \"matChipInputFor\", \"matChipInputSeparatorKeyCodes\", \"matChipInputTokenEnd\"], [\"fruitInput\", \"\"], [3, \"optionSelected\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"removed\"], [\"matChipRemove\", \"\"], [3, \"value\"]], template: function UserSurveyComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"mat-form-field\", 0)(1, \"mat-label\");\r\n        i0.ɵɵtext(2, \"Favorite Fruits\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(3, \"mat-chip-list\", 1, 2);\r\n        i0.ɵɵtemplate(5, UserSurveyComponent_mat_chip_5_Template, 5, 1, \"mat-chip\", 3);\r\n        i0.ɵɵelementStart(6, \"input\", 4, 5);\r\n        i0.ɵɵlistener(\"matChipInputTokenEnd\", function UserSurveyComponent_Template_input_matChipInputTokenEnd_6_listener($event) { return ctx.add($event); });\r\n        i0.ɵɵelementEnd()();\r\n        i0.ɵɵelementStart(8, \"mat-autocomplete\", 6, 7);\r\n        i0.ɵɵlistener(\"optionSelected\", function UserSurveyComponent_Template_mat_autocomplete_optionSelected_8_listener($event) { return ctx.selected($event); });\r\n        i0.ɵɵtemplate(10, UserSurveyComponent_mat_option_10_Template, 2, 2, \"mat-option\", 8);\r\n        i0.ɵɵpipe(11, \"async\");\r\n        i0.ɵɵelementEnd()();\r\n    } if (rf & 2) {\r\n        const _r0 = i0.ɵɵreference(4);\r\n        const _r3 = i0.ɵɵreference(9);\r\n        i0.ɵɵadvance(5);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx.fruits);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"formControl\", ctx.fruitCtrl)(\"matAutocomplete\", _r3)(\"matChipInputFor\", _r0)(\"matChipInputSeparatorKeyCodes\", ctx.separatorKeysCodes);\r\n        i0.ɵɵadvance(4);\r\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(11, 6, ctx.filteredFruits));\r\n    } }, directives: [i1.MatFormField, i1.MatLabel, i2.MatChipList, i3.NgForOf, i2.MatChip, i2.MatChipRemove, i4.MatIcon, i5.DefaultValueAccessor, i6.MatAutocompleteTrigger, i2.MatChipInput, i5.NgControlStatus, i5.FormControlDirective, i6.MatAutocomplete, i7.MatOption], pipes: [i3.AsyncPipe], styles: [\".example-chip-list[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXItc3VydmV5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2IiLCJmaWxlIjoidXNlci1zdXJ2ZXkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNoaXAtbGlzdCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuIl19 */\"] });\r\n"]},"metadata":{},"sourceType":"module"}