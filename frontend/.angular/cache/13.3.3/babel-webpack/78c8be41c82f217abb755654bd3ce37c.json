{"ast":null,"code":"import { Occurrence } from 'src/app/occurrence';\nimport { FormControl } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/occurrence.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./../../_services/token-storage.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/chips\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/material/autocomplete\";\nimport * as i10 from \"@angular/material/core\";\nconst _c0 = [\"stressorInput\"];\n\nfunction OccurrenceLogComponent_mat_chip_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-chip\", 13);\n    i0.ɵɵlistener(\"removed\", function OccurrenceLogComponent_mat_chip_8_Template_mat_chip_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const stressor_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.remove(stressor_r6);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 14)(3, \"mat-icon\");\n    i0.ɵɵtext(4, \"cancel\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const stressor_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", stressor_r6, \" \");\n  }\n}\n\nfunction OccurrenceLogComponent_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const stressor_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", stressor_r9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", stressor_r9, \" \");\n  }\n}\n\nexport class OccurrenceLogComponent {\n  constructor(_service, _route, token, route) {\n    this._service = _service;\n    this._route = _route;\n    this.token = token;\n    this.route = route;\n    this.separatorKeysCodes = [ENTER, COMMA];\n    this.stressorCtrl = new FormControl('');\n    this.form = {\n      location: null,\n      stressors: null,\n      destressors: null,\n      description: null\n    };\n    this.isSuccessful = false;\n    this.isLoggedIn = false;\n    this.errorMessage = '';\n    this.roles = [];\n    this.filteredStressors = this.stressorCtrl.valueChanges.pipe(startWith(null), map(stressor => stressor ? this._filter(stressor) : this.allStressors.slice()));\n    this.allStressors = token.getUser().stressors;\n  }\n\n  ngOnInit() {\n    if (this.token.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.token.getUser().roles;\n    }\n\n    if (!this.isLoggedIn) {\n      this._route.navigateByUrl('/login');\n    }\n\n    this.route.params.subscribe(params => {\n      this.occurrence = new Occurrence();\n\n      if (params['id']) {\n        this.occurrence = this._service.getOccurrenceById(params['id']);\n        this.occurrenceId = params['id'];\n        this.isNew = false;\n      } else {\n        this.isNew = true;\n      }\n    });\n  }\n\n  createOccurrence() {\n    const userId = this.token.getUser().id;\n    const {\n      location,\n      stressors,\n      destressors,\n      description\n    } = this.form;\n\n    if (this.isNew) {\n      this._service.createOccurrence(location, stressors, destressors, description, userId).subscribe(data => {\n        this.isSuccessful = true;\n        console.log(\"eureka!\");\n      }, err => {\n        this.isSuccessful = false;\n        this.errorMessage = err.error.message;\n      });\n    } else {\n      this._service.updateOccurrence(this.occurrenceId, location, stressors, destressors, userId).subscribe(data => {\n        this.isSuccessful = true;\n        console.log(\"updated\");\n      });\n    }\n\n    this._route.navigateByUrl('/profile');\n  }\n\n  add(event) {\n    const value = (event.value || '').trim(); // Add our stressor\n\n    if (value) {\n      this.stressors.push(value);\n    } // Clear the input value\n\n\n    event.chipInput.clear();\n    this.stressorCtrl.setValue(null);\n  }\n\n  remove(stressor) {\n    const index = this.stressors.indexOf(stressor);\n\n    if (index >= 0) {\n      this.stressors.splice(index, 1);\n    }\n  }\n\n  selected(event) {\n    this.stressors.push(event.option.viewValue);\n    this.stressorInput.nativeElement.value = '';\n    this.stressorCtrl.setValue(null);\n  }\n\n  _filter(value) {\n    const filterValue = value.toLowerCase();\n    return this.allStressors.filter(stressor => stressor.toLowerCase().includes(filterValue));\n  }\n\n}\n\nOccurrenceLogComponent.ɵfac = function OccurrenceLogComponent_Factory(t) {\n  return new (t || OccurrenceLogComponent)(i0.ɵɵdirectiveInject(i1.OccurrenceService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.TokenStorageService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n\nOccurrenceLogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: OccurrenceLogComponent,\n  selectors: [[\"app-occurrence-log\"]],\n  viewQuery: function OccurrenceLogComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stressorInput = _t.first);\n    }\n  },\n  decls: 17,\n  vars: 9,\n  consts: [[1, \"oc-container\"], [3, \"ngSubmit\"], [\"occcurrenceLog\", \"ngForm\"], [\"appearance\", \"fill\", 1, \"example-chip-list\"], [\"aria-label\", \"Stressor selection\"], [\"chipList\", \"\"], [3, \"removed\", 4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"Stressors...\", 3, \"formControl\", \"matAutocomplete\", \"matChipInputFor\", \"matChipInputSeparatorKeyCodes\", \"ngModel\", \"matChipInputTokenEnd\", \"ngModelChange\"], [\"stressorInput\", \"\"], [3, \"optionSelected\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\"], [3, \"removed\"], [\"matChipRemove\", \"\"], [3, \"value\"]],\n  template: function OccurrenceLogComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function OccurrenceLogComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.createOccurrence();\n      });\n      i0.ɵɵelementStart(3, \"mat-form-field\", 3)(4, \"mat-label\");\n      i0.ɵɵtext(5, \"What stressors were involved?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"mat-chip-list\", 4, 5);\n      i0.ɵɵtemplate(8, OccurrenceLogComponent_mat_chip_8_Template, 5, 1, \"mat-chip\", 6);\n      i0.ɵɵelementStart(9, \"input\", 7, 8);\n      i0.ɵɵlistener(\"matChipInputTokenEnd\", function OccurrenceLogComponent_Template_input_matChipInputTokenEnd_9_listener($event) {\n        return ctx.add($event);\n      })(\"ngModelChange\", function OccurrenceLogComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.form.stressors = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"mat-autocomplete\", 9, 10);\n      i0.ɵɵlistener(\"optionSelected\", function OccurrenceLogComponent_Template_mat_autocomplete_optionSelected_11_listener($event) {\n        return ctx.selected($event);\n      });\n      i0.ɵɵtemplate(13, OccurrenceLogComponent_mat_option_13_Template, 2, 2, \"mat-option\", 11);\n      i0.ɵɵpipe(14, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"button\", 12);\n      i0.ɵɵtext(16, \"Submit\");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(7);\n\n      const _r4 = i0.ɵɵreference(12);\n\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.stressors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.stressorCtrl)(\"matAutocomplete\", _r4)(\"matChipInputFor\", _r1)(\"matChipInputSeparatorKeyCodes\", ctx.separatorKeysCodes)(\"ngModel\", ctx.form.stressors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(14, 7, ctx.filteredStressors));\n    }\n  },\n  directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i5.MatFormField, i5.MatLabel, i6.MatChipList, i7.NgForOf, i6.MatChip, i6.MatChipRemove, i8.MatIcon, i4.DefaultValueAccessor, i9.MatAutocompleteTrigger, i6.MatChipInput, i4.NgControlStatus, i4.FormControlDirective, i9.MatAutocomplete, i10.MatOption],\n  pipes: [i7.AsyncPipe],\n  styles: [\".oc-container[_ngcontent-%COMP%] {\\r\\n    max-width: 500px;\\r\\n    margin: auto;\\r\\n    margin-top: 50px;\\r\\n    \\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9jY3VycmVuY2UtbG9nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLGdCQUFnQjs7QUFFcEIiLCJmaWxlIjoib2NjdXJyZW5jZS1sb2cuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5vYy1jb250YWluZXIge1xyXG4gICAgbWF4LXdpZHRoOiA1MDBweDtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIG1hcmdpbi10b3A6IDUwcHg7XHJcbiAgICBcclxufSJdfQ== */\"]\n});","map":{"version":3,"sources":["C:/Users/dchiefari/Desktop/liftoff/frontend/src/app/occurrence/occurrence-log/occurrence-log.component.ts"],"names":["Occurrence","FormControl","map","startWith","COMMA","ENTER","i0","i1","i2","i3","i4","i5","i6","i7","i8","i9","i10","_c0","OccurrenceLogComponent_mat_chip_8_Template","rf","ctx","_r8","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","OccurrenceLogComponent_mat_chip_8_Template_mat_chip_removed_0_listener","restoredCtx","ɵɵrestoreView","stressor_r6","$implicit","ctx_r7","ɵɵnextContext","remove","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","OccurrenceLogComponent_mat_option_13_Template","stressor_r9","ɵɵproperty","OccurrenceLogComponent","constructor","_service","_route","token","route","separatorKeysCodes","stressorCtrl","form","location","stressors","destressors","description","isSuccessful","isLoggedIn","errorMessage","roles","filteredStressors","valueChanges","pipe","stressor","_filter","allStressors","slice","getUser","ngOnInit","getToken","navigateByUrl","params","subscribe","occurrence","getOccurrenceById","occurrenceId","isNew","createOccurrence","userId","id","data","console","log","err","error","message","updateOccurrence","add","event","value","trim","push","chipInput","clear","setValue","index","indexOf","splice","selected","option","viewValue","stressorInput","nativeElement","filterValue","toLowerCase","filter","includes","ɵfac","OccurrenceLogComponent_Factory","t","ɵɵdirectiveInject","OccurrenceService","Router","TokenStorageService","ActivatedRoute","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","OccurrenceLogComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","decls","vars","consts","template","OccurrenceLogComponent_Template","OccurrenceLogComponent_Template_form_ngSubmit_1_listener","ɵɵtemplate","OccurrenceLogComponent_Template_input_matChipInputTokenEnd_9_listener","$event","OccurrenceLogComponent_Template_input_ngModelChange_9_listener","OccurrenceLogComponent_Template_mat_autocomplete_optionSelected_11_listener","ɵɵpipe","_r1","ɵɵreference","_r4","ɵɵpipeBind1","directives","ɵNgNoValidate","NgControlStatusGroup","NgForm","MatFormField","MatLabel","MatChipList","NgForOf","MatChip","MatChipRemove","MatIcon","DefaultValueAccessor","MatAutocompleteTrigger","MatChipInput","NgControlStatus","FormControlDirective","MatAutocomplete","MatOption","pipes","AsyncPipe","styles"],"mappings":"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","sourcesContent":["import { Occurrence } from 'src/app/occurrence';\r\nimport { FormControl } from '@angular/forms';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"src/app/service/occurrence.service\";\r\nimport * as i2 from \"@angular/router\";\r\nimport * as i3 from \"./../../_services/token-storage.service\";\r\nimport * as i4 from \"@angular/forms\";\r\nimport * as i5 from \"@angular/material/form-field\";\r\nimport * as i6 from \"@angular/material/chips\";\r\nimport * as i7 from \"@angular/common\";\r\nimport * as i8 from \"@angular/material/icon\";\r\nimport * as i9 from \"@angular/material/autocomplete\";\r\nimport * as i10 from \"@angular/material/core\";\r\nconst _c0 = [\"stressorInput\"];\r\nfunction OccurrenceLogComponent_mat_chip_8_Template(rf, ctx) { if (rf & 1) {\r\n    const _r8 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"mat-chip\", 13);\r\n    i0.ɵɵlistener(\"removed\", function OccurrenceLogComponent_mat_chip_8_Template_mat_chip_removed_0_listener() { const restoredCtx = i0.ɵɵrestoreView(_r8); const stressor_r6 = restoredCtx.$implicit; const ctx_r7 = i0.ɵɵnextContext(); return ctx_r7.remove(stressor_r6); });\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementStart(2, \"button\", 14)(3, \"mat-icon\");\r\n    i0.ɵɵtext(4, \"cancel\");\r\n    i0.ɵɵelementEnd()()();\r\n} if (rf & 2) {\r\n    const stressor_r6 = ctx.$implicit;\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate1(\" \", stressor_r6, \" \");\r\n} }\r\nfunction OccurrenceLogComponent_mat_option_13_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"mat-option\", 15);\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const stressor_r9 = ctx.$implicit;\r\n    i0.ɵɵproperty(\"value\", stressor_r9);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate1(\" \", stressor_r9, \" \");\r\n} }\r\nexport class OccurrenceLogComponent {\r\n    constructor(_service, _route, token, route) {\r\n        this._service = _service;\r\n        this._route = _route;\r\n        this.token = token;\r\n        this.route = route;\r\n        this.separatorKeysCodes = [ENTER, COMMA];\r\n        this.stressorCtrl = new FormControl('');\r\n        this.form = {\r\n            location: null,\r\n            stressors: null,\r\n            destressors: null,\r\n            description: null\r\n        };\r\n        this.isSuccessful = false;\r\n        this.isLoggedIn = false;\r\n        this.errorMessage = '';\r\n        this.roles = [];\r\n        this.filteredStressors = this.stressorCtrl.valueChanges.pipe(startWith(null), map((stressor) => (stressor ? this._filter(stressor) : this.allStressors.slice())));\r\n        this.allStressors = token.getUser().stressors;\r\n    }\r\n    ngOnInit() {\r\n        if (this.token.getToken()) {\r\n            this.isLoggedIn = true;\r\n            this.roles = this.token.getUser().roles;\r\n        }\r\n        if (!this.isLoggedIn) {\r\n            this._route.navigateByUrl('/login');\r\n        }\r\n        this.route.params.subscribe((params) => {\r\n            this.occurrence = new Occurrence();\r\n            if (params['id']) {\r\n                this.occurrence = this._service.getOccurrenceById(params['id']);\r\n                this.occurrenceId = params['id'];\r\n                this.isNew = false;\r\n            }\r\n            else {\r\n                this.isNew = true;\r\n            }\r\n        });\r\n    }\r\n    createOccurrence() {\r\n        const userId = this.token.getUser().id;\r\n        const { location, stressors, destressors, description } = this.form;\r\n        if (this.isNew) {\r\n            this._service.createOccurrence(location, stressors, destressors, description, userId).subscribe(data => {\r\n                this.isSuccessful = true;\r\n                console.log(\"eureka!\");\r\n            }, err => {\r\n                this.isSuccessful = false;\r\n                this.errorMessage = err.error.message;\r\n            });\r\n        }\r\n        else {\r\n            this._service.updateOccurrence(this.occurrenceId, location, stressors, destressors, userId).subscribe(data => {\r\n                this.isSuccessful = true;\r\n                console.log(\"updated\");\r\n            });\r\n        }\r\n        this._route.navigateByUrl('/profile');\r\n    }\r\n    add(event) {\r\n        const value = (event.value || '').trim();\r\n        // Add our stressor\r\n        if (value) {\r\n            this.stressors.push(value);\r\n        }\r\n        // Clear the input value\r\n        event.chipInput.clear();\r\n        this.stressorCtrl.setValue(null);\r\n    }\r\n    remove(stressor) {\r\n        const index = this.stressors.indexOf(stressor);\r\n        if (index >= 0) {\r\n            this.stressors.splice(index, 1);\r\n        }\r\n    }\r\n    selected(event) {\r\n        this.stressors.push(event.option.viewValue);\r\n        this.stressorInput.nativeElement.value = '';\r\n        this.stressorCtrl.setValue(null);\r\n    }\r\n    _filter(value) {\r\n        const filterValue = value.toLowerCase();\r\n        return this.allStressors.filter(stressor => stressor.toLowerCase().includes(filterValue));\r\n    }\r\n}\r\nOccurrenceLogComponent.ɵfac = function OccurrenceLogComponent_Factory(t) { return new (t || OccurrenceLogComponent)(i0.ɵɵdirectiveInject(i1.OccurrenceService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.TokenStorageService), i0.ɵɵdirectiveInject(i2.ActivatedRoute)); };\r\nOccurrenceLogComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: OccurrenceLogComponent, selectors: [[\"app-occurrence-log\"]], viewQuery: function OccurrenceLogComponent_Query(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵviewQuery(_c0, 5);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stressorInput = _t.first);\r\n    } }, decls: 17, vars: 9, consts: [[1, \"oc-container\"], [3, \"ngSubmit\"], [\"occcurrenceLog\", \"ngForm\"], [\"appearance\", \"fill\", 1, \"example-chip-list\"], [\"aria-label\", \"Stressor selection\"], [\"chipList\", \"\"], [3, \"removed\", 4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"Stressors...\", 3, \"formControl\", \"matAutocomplete\", \"matChipInputFor\", \"matChipInputSeparatorKeyCodes\", \"ngModel\", \"matChipInputTokenEnd\", \"ngModelChange\"], [\"stressorInput\", \"\"], [3, \"optionSelected\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\"], [3, \"removed\"], [\"matChipRemove\", \"\"], [3, \"value\"]], template: function OccurrenceLogComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2);\r\n        i0.ɵɵlistener(\"ngSubmit\", function OccurrenceLogComponent_Template_form_ngSubmit_1_listener() { return ctx.createOccurrence(); });\r\n        i0.ɵɵelementStart(3, \"mat-form-field\", 3)(4, \"mat-label\");\r\n        i0.ɵɵtext(5, \"What stressors were involved?\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(6, \"mat-chip-list\", 4, 5);\r\n        i0.ɵɵtemplate(8, OccurrenceLogComponent_mat_chip_8_Template, 5, 1, \"mat-chip\", 6);\r\n        i0.ɵɵelementStart(9, \"input\", 7, 8);\r\n        i0.ɵɵlistener(\"matChipInputTokenEnd\", function OccurrenceLogComponent_Template_input_matChipInputTokenEnd_9_listener($event) { return ctx.add($event); })(\"ngModelChange\", function OccurrenceLogComponent_Template_input_ngModelChange_9_listener($event) { return ctx.form.stressors = $event; });\r\n        i0.ɵɵelementEnd()();\r\n        i0.ɵɵelementStart(11, \"mat-autocomplete\", 9, 10);\r\n        i0.ɵɵlistener(\"optionSelected\", function OccurrenceLogComponent_Template_mat_autocomplete_optionSelected_11_listener($event) { return ctx.selected($event); });\r\n        i0.ɵɵtemplate(13, OccurrenceLogComponent_mat_option_13_Template, 2, 2, \"mat-option\", 11);\r\n        i0.ɵɵpipe(14, \"async\");\r\n        i0.ɵɵelementEnd()();\r\n        i0.ɵɵelementStart(15, \"button\", 12);\r\n        i0.ɵɵtext(16, \"Submit\");\r\n        i0.ɵɵelementEnd()()();\r\n    } if (rf & 2) {\r\n        const _r1 = i0.ɵɵreference(7);\r\n        const _r4 = i0.ɵɵreference(12);\r\n        i0.ɵɵadvance(8);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx.stressors);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"formControl\", ctx.stressorCtrl)(\"matAutocomplete\", _r4)(\"matChipInputFor\", _r1)(\"matChipInputSeparatorKeyCodes\", ctx.separatorKeysCodes)(\"ngModel\", ctx.form.stressors);\r\n        i0.ɵɵadvance(4);\r\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(14, 7, ctx.filteredStressors));\r\n    } }, directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i5.MatFormField, i5.MatLabel, i6.MatChipList, i7.NgForOf, i6.MatChip, i6.MatChipRemove, i8.MatIcon, i4.DefaultValueAccessor, i9.MatAutocompleteTrigger, i6.MatChipInput, i4.NgControlStatus, i4.FormControlDirective, i9.MatAutocomplete, i10.MatOption], pipes: [i7.AsyncPipe], styles: [\".oc-container[_ngcontent-%COMP%] {\\r\\n    max-width: 500px;\\r\\n    margin: auto;\\r\\n    margin-top: 50px;\\r\\n    \\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9jY3VycmVuY2UtbG9nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLGdCQUFnQjs7QUFFcEIiLCJmaWxlIjoib2NjdXJyZW5jZS1sb2cuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5vYy1jb250YWluZXIge1xyXG4gICAgbWF4LXdpZHRoOiA1MDBweDtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIG1hcmdpbi10b3A6IDUwcHg7XHJcbiAgICBcclxufSJdfQ== */\"] });\r\n"]},"metadata":{},"sourceType":"module"}